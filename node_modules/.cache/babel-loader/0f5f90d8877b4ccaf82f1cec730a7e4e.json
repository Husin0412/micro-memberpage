{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\MICROSERVICE\\\\FRONTEND\\\\react-js\\\\micro-memberpage\\\\src\\\\components\\\\Form\\\\Select\\\\index.js\";\nimport React, { Children, useState, useRef, useEffect } from 'react';\nimport propTypes from 'prop-types';\nexport default function Select({\n  labelName,\n  id,\n  name,\n  value,\n  className,\n  children,\n  onClick,\n  fallbackText\n}) {\n  var _selected$props$child;\n\n  const [toggle, settoggle] = useState(() => false);\n  const selectWrapper = useRef(null);\n  const items = Children.toArray(children);\n\n  function toggleSelect() {\n    settoggle(() => !toggle);\n  }\n\n  function clickOutside(event) {\n    if (selectWrapper && !selectWrapper.current.contain(event.target)) settoggle(false);\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", clickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", clickOutside);\n    };\n  }, []);\n  const selected = items.find(item => item.props.value === value);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-coll mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, labelName && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"show text-lg mb-2 text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, labelName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    ref: selectWrapper,\n    onClick: toggleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: [\"flex justify-between cursor-pointer bg-white focus:outline-none transition-all duration-200 border px-4 py-3 w-full\", toggle ? \"border-teal-500\" : \"border-gray-600\", className].join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: value === \"\" ? \"text-gray-500\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }, (_selected$props$child = selected === null || selected === void 0 ? void 0 : selected.props.children) !== null && _selected$props$child !== void 0 ? _selected$props$child : fallbackText), \"div.\")));\n}\nSelect.propTypes = {\n  onClick: propTypes.func.isRequired,\n  value: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,\n  name: propTypes.string.isRequired,\n  fallbackText: propTypes.string,\n  labelName: propTypes.string,\n  id: propTypes.string,\n  className: propTypes.string\n};","map":{"version":3,"sources":["C:/xampp/htdocs/MICROSERVICE/FRONTEND/react-js/micro-memberpage/src/components/Form/Select/index.js"],"names":["React","Children","useState","useRef","useEffect","propTypes","Select","labelName","id","name","value","className","children","onClick","fallbackText","toggle","settoggle","selectWrapper","items","toArray","toggleSelect","clickOutside","event","current","contain","target","window","addEventListener","removeEventListener","selected","find","item","props","join","func","isRequired","oneOfType","string","number"],"mappings":"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","sourcesContent":["import React, {Children, useState, useRef, useEffect} from 'react'\nimport propTypes from 'prop-types'\n\nexport default function Select({labelName, id, name, value, className, children, onClick, fallbackText}) {\n\n  const [toggle, settoggle] = useState(() => false)\n  const selectWrapper = useRef(null)\n\n  const items = Children.toArray(children)\n\n  function toggleSelect() {\n    settoggle( () => !toggle)\n  }\n\n  function clickOutside(event) {\n    if(selectWrapper && !selectWrapper.current.contain(event.target))\n    settoggle(false)\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", clickOutside)\n    return () => {\n      window.removeEventListener(\"mousedown\", clickOutside)\n    }\n  }, [])\n\n  const selected = items.find( item => item.props.value === value)\n\n\n\n  return (\n    <div className=\"flex flex-coll mb-4\">\n      {\n        labelName && (<label htmlFor=\"\" className=\"show text-lg mb-2 text-gray-900\">{labelName}</label>)\n      }\n      <div className=\"relative\" ref={selectWrapper} onClick={toggleSelect}>\n        <div className={[\"flex justify-between cursor-pointer bg-white focus:outline-none transition-all duration-200 border px-4 py-3 w-full\",\n         toggle ? \"border-teal-500\" : \"border-gray-600\", className].join(\" \")}>\n           <span className={ value === \"\" ? \"text-gray-500\" : \"\"}>{selected?.props.children ?? fallbackText}</span>\n           div.\n         </div>\n      </div>\n    </div>\n  )\n}\n\nSelect.propTypes = {\n  onClick: propTypes.func.isRequired,\n  value:  propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,\n  name: propTypes.string.isRequired, \n  fallbackText: propTypes.string,\n  labelName: propTypes.string, \n  id: propTypes.string, \n  className: propTypes.string, \n}"]},"metadata":{},"sourceType":"module"}
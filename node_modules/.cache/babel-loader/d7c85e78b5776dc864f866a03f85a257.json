{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport users from \"constants/api/users\";\nimport axios, { setAuthorizationHeader } from \"./index\";\nexport default function errorHandler(error) {\n  if (error) {\n    let message;\n\n    if (error.response) {\n      const originalRequest = error.config;\n      if (error.response.status === 500) message = \"Something went terribly wrong\";else if (error.response.status == 403 && !originalRequest._retry) {\n        or;\n      } else message = error.response.data.message;\n      if (typeof message === \"string\") toast.error(message);\n      return Promise.reject(error);\n    }\n  }\n}","map":{"version":3,"sources":["C:/xampp/htdocs/MICROSERVICE/FRONTEND/react-js/micro-memberpage/src/configs/axios/errorHandler.js"],"names":["toast","users","axios","setAuthorizationHeader","errorHandler","error","message","response","originalRequest","config","status","_retry","or","data","Promise","reject"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,KAAP,IAAgBC,sBAAhB,QAA8C,SAA9C;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,MAAIA,KAAJ,EAAW;AACT,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,QAAV,EAAoB;AAClB,YAAMC,eAAe,GAAGH,KAAK,CAACI,MAA9B;AACA,UAAIJ,KAAK,CAACE,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EACEJ,OAAO,GAAG,+BAAV,CADF,KAEK,IAAID,KAAK,CAACE,QAAN,CAAeG,MAAf,IAAyB,GAAzB,IAAgC,CAACF,eAAe,CAACG,MAArD,EAA6D;AAChEC,QAAAA,EAAE;AACH,OAFI,MAGAN,OAAO,GAAGD,KAAK,CAACE,QAAN,CAAeM,IAAf,CAAoBP,OAA9B;AACL,UAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiCN,KAAK,CAACK,KAAN,CAAYC,OAAZ;AAEjC,aAAOQ,OAAO,CAACC,MAAR,CAAeV,KAAf,CAAP;AACD;AACF;AACF","sourcesContent":["import { toast } from \"react-toastify\";\nimport users from \"constants/api/users\";\n\nimport axios, { setAuthorizationHeader } from \"./index\";\n\nexport default function errorHandler(error) {\n  if (error) {\n    let message;\n    if (error.response) {\n      const originalRequest = error.config\n      if (error.response.status === 500)\n        message = \"Something went terribly wrong\";\n      else if (error.response.status == 403 && !originalRequest._retry) {\n        or\n      }\n      else message = error.response.data.message;\n      if (typeof message === \"string\") toast.error(message);\n\n      return Promise.reject(error);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}